{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react-native-web/dist/index\";\nimport { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Form, Screen, Content, Title, Logo, Container, LoginButton, LoginLabel } from \"./styles\";\nimport logoImg from \"../../../../assets/img/white-icon.png\";\nimport { Input } from \"../../../../components/Input\";\nimport { Button } from \"../../../../components/Button\";\nimport { isValidCPF } from \"../../../../utils/cpfValidation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUpProfessional1(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    cpf = _useState2[0],\n    setCpf = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isValid = _useState4[0],\n    setIsValid = _useState4[1];\n  var handleVerifyCPF = function handleVerifyCPF() {\n    setIsValid(isValidCPF(cpf));\n  };\n  function Data() {\n    navigation.navigate(\"SignUpProfessional2\", {\n      name: name,\n      birthDate: birthDate,\n      telephone: telephone,\n      cpf: cpf\n    });\n  }\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    birthDate = _useState8[0],\n    setBirthDate = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    telephone = _useState10[0],\n    setTelephone = _useState10[1];\n  return _jsx(Screen, {\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : undefined,\n      children: _jsxs(Content, {\n        children: [_jsx(Logo, {\n          source: logoImg\n        }), _jsx(Form, {\n          children: _jsxs(Container, {\n            children: [_jsx(Title, {\n              children: \" Criar conta \"\n            }), _jsx(Input, {\n              name: \"name\",\n              placeholder: \"Nome*\",\n              type: \"primary\",\n              onChangeText: setName,\n              value: name\n            }), _jsx(Input, {\n              name: \"cpf\",\n              placeholder: \"CPF*\",\n              type: \"primary\",\n              keyboardType: \"numeric\",\n              onChangeText: setCpf,\n              value: cpf\n            }), _jsx(Input, {\n              name: \"birthDate\",\n              placeholder: \"Data de Nascimento*\",\n              type: \"primary\",\n              onChangeText: setBirthDate,\n              value: birthDate\n            }), _jsx(Input, {\n              name: \"telephone\",\n              placeholder: \"N\\xFAmero de telefone*\",\n              type: \"primary\",\n              keyboardType: \"numeric\",\n              onChangeText: setTelephone,\n              value: telephone\n            }), _jsx(Button, {\n              title: \"Continuar\",\n              type: \"primary\",\n              onPress: Data\n            }), _jsx(LoginButton, {\n              children: _jsx(LoginLabel, {\n                children: \" J\\xE1 possui conta? Fa\\xE7a Login.\"\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","KeyboardAvoidingView","Platform","Form","Screen","Content","Title","Logo","Container","LoginButton","LoginLabel","logoImg","Input","Button","isValidCPF","jsx","_jsx","jsxs","_jsxs","SignUpProfessional1","_ref","navigation","_useState","_useState2","_slicedToArray","cpf","setCpf","_useState3","_useState4","isValid","setIsValid","handleVerifyCPF","Data","navigate","name","birthDate","telephone","_useState5","_useState6","setName","_useState7","_useState8","setBirthDate","_useState9","_useState10","setTelephone","children","behavior","OS","undefined","source","placeholder","type","onChangeText","value","keyboardType","title","onPress"],"sources":["C:/GLIA/27-10/GliaApp/src/screens/Professional/SignUp/SignUpFirstStep/index.tsx"],"sourcesContent":["import React from \"react-native\";\r\nimport { useState } from \"react\";\r\n//Para a tela subir junto com o teclado\r\nimport { KeyboardAvoidingView, Platform } from \"react-native\";\r\nimport {\r\n  Form,\r\n  Screen,\r\n  Content,\r\n  Title,\r\n  Logo,\r\n  Container,\r\n  LoginButton,\r\n  LoginLabel,\r\n} from \"./styles\";\r\nimport logoImg from \"src/assets/img/white-icon.png\";\r\nimport { Input } from \"src/components/Input\";\r\nimport { Button } from \"src/components/Button\";\r\nimport { isValidCPF } from 'src/utils/cpfValidation';\r\n\r\nexport function SignUpProfessional1({ navigation }: { navigation: any }) {\r\n\r\n  const [cpf, setCpf] = useState<string>('');\r\n  const [isValid, setIsValid] = useState<boolean>(false);\r\n\r\n  const handleVerifyCPF = () => {\r\n    setIsValid(isValidCPF(cpf));\r\n  };\r\n\r\n  function Data() {\r\n    navigation.navigate(\"SignUpProfessional2\", {\r\n      name,\r\n      birthDate,\r\n      telephone,\r\n      cpf,\r\n    });\r\n  }\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n\r\n  return (\r\n    <Screen>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : undefined}\r\n        >\r\n\r\n      <Content>\r\n        <Logo source={logoImg} />\r\n        <Form>\r\n          <Container>\r\n            <Title> Criar conta </Title>\r\n\r\n            <Input\r\n              name=\"name\"\r\n              placeholder=\"Nome*\"\r\n              type=\"primary\"\r\n              onChangeText={setName}\r\n              value={name}\r\n            />\r\n\r\n            <Input\r\n              name=\"cpf\"\r\n              placeholder=\"CPF*\"\r\n              type=\"primary\"\r\n              keyboardType=\"numeric\"\r\n              onChangeText={setCpf}\r\n              value={cpf}\r\n            />\r\n\r\n            <Input\r\n              name=\"birthDate\"\r\n              placeholder=\"Data de Nascimento*\"\r\n              type=\"primary\"\r\n              onChangeText={setBirthDate}\r\n              value={birthDate}\r\n            />\r\n\r\n            <Input\r\n              name=\"telephone\"\r\n              placeholder=\"Número de telefone*\"\r\n              type=\"primary\"\r\n              keyboardType=\"numeric\"\r\n              onChangeText={setTelephone}\r\n              value={telephone}\r\n            />\r\n\r\n            <Button title=\"Continuar\" type=\"primary\" onPress={Data} />\r\n            <LoginButton>\r\n              <LoginLabel> Já possui conta? Faça Login.</LoginLabel>\r\n            </LoginButton>\r\n          </Container>\r\n        </Form>\r\n      </Content>\r\n      </KeyboardAvoidingView>\r\n    </Screen>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}