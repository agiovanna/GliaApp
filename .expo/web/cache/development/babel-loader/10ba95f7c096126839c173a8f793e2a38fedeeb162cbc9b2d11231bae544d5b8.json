{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport firebaseAuth from \"../../api/firebase/firebaseConfig\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function RegisterFirebaseandSendEmail(_x, _x2) {\n  return _RegisterFirebaseandSendEmail.apply(this, arguments);\n}\nfunction _RegisterFirebaseandSendEmail() {\n  _RegisterFirebaseandSendEmail = _asyncToGenerator(function* (email, password) {\n    try {\n      var userCredential = yield createUserWithEmailAndPassword(firebaseAuth, email, password);\n      var user = userCredential.user;\n      if (user) {\n        yield sendEmailVerification(user);\n        Alert.alert('Informação', `Foi enviado um e-mail para ${email} para verificação.`);\n      } else {\n        console.log('Informação', 'Erro ao procurar usuário no Firebase.');\n      }\n    } catch (error) {\n      console.error('Erro ao criar o usuário no Firebase:', error);\n    }\n  });\n  return _RegisterFirebaseandSendEmail.apply(this, arguments);\n}","map":{"version":3,"names":["firebaseAuth","createUserWithEmailAndPassword","sendEmailVerification","Alert","RegisterFirebaseandSendEmail","_x","_x2","_RegisterFirebaseandSendEmail","apply","arguments","_asyncToGenerator","email","password","userCredential","user","alert","console","log","error"],"sources":["C:/glia/localizacao/GliaApp/src/utils/emailValidation/sendValidation.ts"],"sourcesContent":["import firebaseAuth from \"src/api/firebase/firebaseConfig\";\r\nimport { createUserWithEmailAndPassword, User as FirebaseUser, sendEmailVerification } from \"firebase/auth\";\r\nimport { Alert } from \"react-native\";\r\n\r\n\r\n   export async function RegisterFirebaseandSendEmail(email: string, password: string) {\r\n        try {\r\n            //create user in Firebase\r\n            const userCredential = await createUserWithEmailAndPassword(firebaseAuth, email, password)\r\n            const user: FirebaseUser = userCredential.user;\r\n\r\n            if (user) {\r\n                //send a email verification\r\n                await sendEmailVerification(user)\r\n                Alert.alert('Informação', `Foi enviado um e-mail para ${email} para verificação.`);\r\n            }\r\n            else {\r\n                console.log('Informação', 'Erro ao procurar usuário no Firebase.');\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error('Erro ao criar o usuário no Firebase:', error);\r\n        }\r\n    }"],"mappings":";AAAA,OAAOA,YAAY;AACnB,SAASC,8BAA8B,EAAwBC,qBAAqB,QAAQ,eAAe;AAAC,OAAAC,KAAA;AAIzG,gBAAsBC,4BAA4BA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAkBhD,SAAAF,8BAAA;EAAAA,6BAAA,GAAAG,iBAAA,CAlBK,WAA4CC,KAAa,EAAEC,QAAgB,EAAE;IAC/E,IAAI;MAEA,IAAMC,cAAc,SAASZ,8BAA8B,CAACD,YAAY,EAAEW,KAAK,EAAEC,QAAQ,CAAC;MAC1F,IAAME,IAAkB,GAAGD,cAAc,CAACC,IAAI;MAE9C,IAAIA,IAAI,EAAE;QAEN,MAAMZ,qBAAqB,CAACY,IAAI,CAAC;QACjCX,KAAK,CAACY,KAAK,CAAC,YAAY,EAAG,8BAA6BJ,KAAM,oBAAmB,CAAC;MACtF,CAAC,MACI;QACDK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,uCAAuC,CAAC;MACtE;IACJ,CAAC,CACD,OAAOC,KAAK,EAAE;MACVF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAChE;EACJ,CAAC;EAAA,OAAAX,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}