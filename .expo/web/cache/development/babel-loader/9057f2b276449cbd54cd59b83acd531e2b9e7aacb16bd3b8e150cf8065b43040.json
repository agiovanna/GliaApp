{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react-native-web/dist/index\";\nimport { Screen, Container, Content, SubTitle, Title } from \"./styles\";\nimport { createUserProfessional } from \"../../../../api/createUser/createProfessional\";\nimport verificationEmail from \"../../../../utils/emailValidation/verifyValidation\";\nimport { Button } from \"../../../../components/Button\";\nimport { Header } from \"../../../../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUpProfessional5(_ref) {\n  var route = _ref.route;\n  function Verification() {\n    return _Verification.apply(this, arguments);\n  }\n  function _Verification() {\n    _Verification = _asyncToGenerator(function* () {\n      verificationEmail;\n      var _route$params = route.params,\n        name = _route$params.name,\n        birthDate = _route$params.birthDate,\n        telephone = _route$params.telephone,\n        cpf = _route$params.cpf,\n        cnpj = _route$params.cnpj,\n        fantasyName = _route$params.fantasyName,\n        state = _route$params.state,\n        city = _route$params.city,\n        cep = _route$params.cep,\n        neighborhood = _route$params.neighborhood,\n        street = _route$params.street,\n        numberHome = _route$params.numberHome,\n        complement = _route$params.complement,\n        email = _route$params.email,\n        password = _route$params.password,\n        passwordConf = _route$params.passwordConf;\n      console.log('Nome: ' + name, 'Data de nascimento: ' + birthDate, 'Contato: ' + telephone, 'CPF: ' + cpf, 'Estado: ' + state, 'Cidade: ' + city, 'CEP: ' + cep, 'Bairro: ' + neighborhood, 'Rua: ' + street, 'Nº da rua: ' + numberHome, 'Complemento: ' + complement, 'CNPJ: ' + cnpj, 'Nome Fantansia: ' + fantasyName, 'E-mail: ' + email, 'Senha: ' + password, 'Confirmação de senha: ' + passwordConf);\n      createUserProfessional(name, birthDate, telephone, cpf, cnpj, fantasyName, state, city, cep, neighborhood, street, numberHome, complement, email, password);\n    });\n    return _Verification.apply(this, arguments);\n  }\n  return _jsx(Screen, {\n    children: _jsxs(Content, {\n      children: [_jsx(Header, {\n        title: \"Senha\"\n      }), _jsxs(Container, {\n        children: [_jsx(Title, {\n          children: \" VERIFIQUE SEU EMAIL!\"\n        }), _jsx(SubTitle, {\n          children: \" Para continuar, verifique o link de verifica\\xE7\\xE3o enviado para seu email. Aperte o bot\\xE3o \\\"Verificar\\\" ap\\xF3s isso.  \"\n        }), _jsx(Button, {\n          type: \"terciary\",\n          title: \"Verificar\",\n          onPress: Verification\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Screen","Container","Content","SubTitle","Title","createUserProfessional","verificationEmail","Button","Header","jsx","_jsx","jsxs","_jsxs","SignUpProfessional5","_ref","route","Verification","_Verification","apply","arguments","_asyncToGenerator","_route$params","params","name","birthDate","telephone","cpf","cnpj","fantasyName","state","city","cep","neighborhood","street","numberHome","complement","email","password","passwordConf","console","log","children","title","type","onPress"],"sources":["C:/glia/localizacao/GliaApp/src/screens/Professional/SignUp/SignUpFifthStep/index.tsx"],"sourcesContent":["import React from \"react-native\";\r\nimport {Screen, Container, Content, SubTitle, Title} from './styles';\r\nimport { createUserProfessional } from \"src/api/createUser/createProfessional\";\r\nimport verificationEmail  from \"src/utils/emailValidation/verifyValidation\";\r\n\r\n\r\nimport { Button } from \"src/components/Button\";\r\nimport { Header } from \"src/components/Header\";\r\n\r\nexport function SignUpProfessional5 ({route}: {route: any}){\r\n    async function Verification() {\r\n\r\n        verificationEmail;\r\n\r\n        const {\r\n            name,\r\n            birthDate,\r\n            telephone,\r\n            cpf,\r\n            cnpj,\r\n            fantasyName,\r\n            state,\r\n            city,\r\n            cep,\r\n            neighborhood,\r\n            street,\r\n            numberHome,\r\n            complement,\r\n            email,\r\n            password,\r\n            passwordConf\r\n        } = route.params;\r\n\r\n        console.log(\r\n            'Nome: ' + name,\r\n            'Data de nascimento: ' + birthDate,\r\n            'Contato: ' + telephone,\r\n            'CPF: ' + cpf,\r\n            'Estado: ' + state,\r\n            'Cidade: ' + city,\r\n            'CEP: ' + cep,\r\n            'Bairro: ' + neighborhood,\r\n            'Rua: ' + street,\r\n            'Nº da rua: ' + numberHome,\r\n            'Complemento: ' + complement,\r\n            'CNPJ: ' + cnpj,\r\n            'Nome Fantansia: ' + fantasyName,\r\n            'E-mail: ' + email,\r\n            'Senha: ' + password,\r\n            'Confirmação de senha: ' + passwordConf);\r\n\r\n        createUserProfessional(\r\n            name,\r\n            birthDate,\r\n            telephone,\r\n            cpf,\r\n            cnpj,\r\n            fantasyName,\r\n            state,\r\n            city,\r\n            cep,\r\n            neighborhood,\r\n            street,\r\n            numberHome,\r\n            complement,\r\n            email,\r\n            password\r\n        );\r\n\r\n    }\r\n\r\n    return(\r\n    <Screen> \r\n        <Content>\r\n        <Header title=\"Senha\"/>\r\n\r\n        <Container>\r\n            <Title> VERIFIQUE SEU EMAIL!</ Title>\r\n            <SubTitle> Para continuar, verifique o link de verificação enviado para seu email. Aperte o botão \"Verificar\" após isso.  </SubTitle>\r\n\r\n            <Button type=\"terciary\" title=\"Verificar\" onPress={Verification}/>\r\n        </Container>\r\n        </Content>\r\n        </Screen>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}