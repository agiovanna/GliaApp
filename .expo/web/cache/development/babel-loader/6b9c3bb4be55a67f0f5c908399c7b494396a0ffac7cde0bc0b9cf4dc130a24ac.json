{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport { requestForegroundPermissionsAsync, getCurrentPositionAsync, watchPositionAsync } from 'expo-location';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useEffect } from 'react';\nimport { api } from \"../../lib/axios\";\nimport io from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Map() {\n  var socket = io('http://192.168.3.6:3000');\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userOn = _useState4[0],\n    setUserOn = _useState4[1];\n  function requestLocationPermission() {\n    return _requestLocationPermission.apply(this, arguments);\n  }\n  function _requestLocationPermission() {\n    _requestLocationPermission = _asyncToGenerator(function* () {\n      var _yield$requestForegro = yield requestForegroundPermissionsAsync(),\n        granted = _yield$requestForegro.granted;\n      if (granted) {\n        var currentPosition = yield getCurrentPositionAsync();\n        setLocation(currentPosition);\n      }\n    });\n    return _requestLocationPermission.apply(this, arguments);\n  }\n  useEffect(function () {\n    requestLocationPermission();\n  }, []);\n  useEffect(function () {\n    socket.on('searchProfessionals', _asyncToGenerator(function* () {\n      var professionals = yield api.get('/getProfessionalsOn');\n      setUserOn(professionals.data);\n    }));\n  }, []);\n  useEffect(function () {\n    if (location) {\n      watchPositionAsync({\n        distanceInterval: 10\n      }, function (newLocation) {\n        api.put('/saveLocation', {\n          latitude: newLocation.coords.latitude,\n          longitude: -46.8889\n        }).then(function () {\n          console.log('Location Saved :)');\n        }).catch(function (error) {\n          console.log('ERRO: ' + error);\n        });\n      });\n    }\n  }, [location]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [location && _jsxs(MapView, {\n      style: styles.map,\n      region: {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0143,\n        longitudeDelta: 0.00134\n      },\n      loadingEnabled: true,\n      zoomEnabled: true,\n      children: [_jsx(Marker, {\n        coordinate: {\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude\n        },\n        pinColor: \"blue\"\n      }), userOn && userOn.map(function (user) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: user.tb_profissional_latitude,\n            longitude: user.tb_profissional_longitude\n          },\n          title: user.tb_profissional_nome\n        }, user.tb_profissional_id);\n      })]\n    }), _jsx(View, {\n      children: userOn.map(function (user) {\n        return _jsxs(Text, {\n          children: [user.tb_profissional_nome, \", \", user.tb_profissional_rua, \" \"]\n        }, user.tb_profissional_id);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    width: '100%',\n    height: '100%'\n  }\n});","map":{"version":3,"names":["React","useState","MapView","Marker","requestForegroundPermissionsAsync","getCurrentPositionAsync","watchPositionAsync","StyleSheet","Text","View","useEffect","api","io","jsx","_jsx","jsxs","_jsxs","Map","socket","_useState","_useState2","_slicedToArray","location","setLocation","_useState3","_useState4","userOn","setUserOn","requestLocationPermission","_requestLocationPermission","apply","arguments","_asyncToGenerator","_yield$requestForegro","granted","currentPosition","on","professionals","get","data","distanceInterval","newLocation","put","latitude","coords","longitude","then","console","log","catch","error","style","styles","container","children","map","region","latitudeDelta","longitudeDelta","loadingEnabled","zoomEnabled","coordinate","pinColor","user","tb_profissional_latitude","tb_profissional_longitude","title","tb_profissional_nome","tb_profissional_id","tb_profissional_rua","create","flex","width","height"],"sources":["C:/desenvolvimento TCC/gliaUp/GliaApp/src/utils/Map/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport {\r\n    requestForegroundPermissionsAsync,\r\n    getCurrentPositionAsync,\r\n    LocationObject,\r\n    watchPositionAsync\r\n} from 'expo-location';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { useEffect } from 'react';\r\nimport { api } from 'src/lib/axios';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport function Map() {\r\n\r\n    const socket = io('http://192.168.3.6:3000');\r\n\r\n    const [location, setLocation] = useState<LocationObject | null>(null);\r\n    const [userOn, setUserOn] = useState<\r\n        {\r\n            tb_profissional_id: number;\r\n            tb_profissional_rua: string;\r\n            tb_profissional_longitude: number;\r\n            tb_profissional_latitude: number;\r\n            tb_profissional_nome: string;\r\n        }[]\r\n    >([]);\r\n\r\n    async function requestLocationPermission() {\r\n        const { granted } = await requestForegroundPermissionsAsync();\r\n\r\n        if (granted) {\r\n            const currentPosition = await getCurrentPositionAsync()\r\n            setLocation(currentPosition);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        requestLocationPermission();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('searchProfessionals', async () => {\r\n            const professionals = await api.get('/getProfessionalsOn');\r\n            setUserOn(professionals.data);\r\n        });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (location) {\r\n            watchPositionAsync(\r\n                { distanceInterval: 10 }, \r\n                (newLocation) => {\r\n                    api.put('/saveLocation', {\r\n                        latitude: newLocation.coords.latitude,\r\n                        longitude: -46.8889,\r\n                    })\r\n                        .then(() => {\r\n                            console.log('Location Saved :)');\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('ERRO: ' + error);\r\n                        });\r\n                }\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            {\r\n                location &&\r\n\r\n                <MapView style={styles.map}\r\n                    region={{\r\n                        latitude: location.coords.latitude,\r\n                        longitude: location.coords.longitude,\r\n                        latitudeDelta: 0.0143,\r\n                        longitudeDelta: 0.00134\r\n                    }}\r\n                    loadingEnabled\r\n                    zoomEnabled={true}\r\n                >\r\n\r\n                    <Marker\r\n                        coordinate={{\r\n                            latitude: location.coords.latitude,\r\n                            longitude: location.coords.longitude\r\n                        }}\r\n                        pinColor=\"blue\"\r\n                    />\r\n\r\n                    {\r\n                        userOn &&\r\n                        \r\n                        userOn.map((user) => (\r\n                            <Marker\r\n                                key={user.tb_profissional_id}\r\n                                coordinate={{\r\n                                    latitude: user.tb_profissional_latitude,\r\n                                    longitude: user.tb_profissional_longitude\r\n                                }}\r\n                                title={user.tb_profissional_nome}\r\n                            />\r\n                        ))\r\n                    }\r\n                </MapView>\r\n            }\r\n\r\n            <View>\r\n                {\r\n                    userOn.map((user) => (\r\n                        <Text key={user.tb_profissional_id}>{user.tb_profissional_nome}, {user.tb_profissional_rua} </Text>\r\n\r\n                    ))\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    map: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}