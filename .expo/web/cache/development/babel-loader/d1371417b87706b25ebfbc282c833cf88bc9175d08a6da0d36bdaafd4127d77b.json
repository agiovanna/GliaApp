{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"type\", \"isLoading\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react-native-web/dist/index\";\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { ButtonT, Title, Load } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Button(_ref) {\n  var title = _ref.title,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'primary' : _ref$type,\n    _ref$isLoading = _ref.isLoading,\n    isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(GestureHandlerRootView, {\n    children: _jsx(ButtonT, _objectSpread(_objectSpread({\n      type: type,\n      enabled: !isLoading\n    }, rest), {}, {\n      children: isLoading ? _jsx(Load, {}) : _jsxs(Title, {\n        children: [\" \", title, \" \"]\n      })\n    }))\n  });\n}","map":{"version":3,"names":["React","GestureHandlerRootView","ButtonT","Title","Load","jsx","_jsx","jsxs","_jsxs","Button","_ref","title","_ref$type","type","_ref$isLoading","isLoading","rest","_objectWithoutProperties","_excluded","children","_objectSpread","enabled"],"sources":["C:/desenvolvimento TCC/gliaUp/GliaApp/src/components/Button/index.tsx"],"sourcesContent":["import React from 'react-native';\r\nimport { RectButtonProps } from 'react-native-gesture-handler';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\nimport { ButtonT, Title, Load, TypeProps } from './styles';\r\n\r\ntype Props = RectButtonProps & {\r\n    title: string;\r\n    type?: TypeProps;\r\n    isLoading?: boolean;\r\n}\r\n\r\nexport function Button({ title, type = 'primary', isLoading = false, ...rest }: Props) {\r\n    return (\r\n        <GestureHandlerRootView>\r\n            <ButtonT type={type} enabled={!isLoading} {...rest}>\r\n                {isLoading ? <Load /> : <Title> {title} </Title>}\r\n            </ButtonT>\r\n        </GestureHandlerRootView>\r\n    );\r\n}"],"mappings":";;;;;OAAOA,KAAK;AAEZ,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,OAAO,EAAEC,KAAK,EAAEC,IAAI;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAQ3D,OAAO,SAASC,MAAMA,CAAAC,IAAA,EAAiE;EAAA,IAA9DC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAAC,SAAA,GAAAF,IAAA,CAAEG,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,SAAS,GAAAA,SAAA;IAAAE,cAAA,GAAAJ,IAAA,CAAEK,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IAAKE,IAAI,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EACxE,OACIZ,IAAA,CAACL,sBAAsB;IAAAkB,QAAA,EACnBb,IAAA,CAACJ,OAAO,EAAAkB,aAAA,CAAAA,aAAA;MAACP,IAAI,EAAEA,IAAK;MAACQ,OAAO,EAAE,CAACN;IAAU,GAAKC,IAAI;MAAAG,QAAA,EAC7CJ,SAAS,GAAGT,IAAA,CAACF,IAAI,IAAE,CAAC,GAAGI,KAAA,CAACL,KAAK;QAAAgB,QAAA,GAAC,GAAC,EAACR,KAAK,EAAC,GAAC;MAAA,CAAO;IAAC,EAC3C;EAAC,CACU,CAAC;AAEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}